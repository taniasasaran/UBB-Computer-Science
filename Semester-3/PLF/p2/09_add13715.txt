% 9.
% a. For a list of integer number, write a predicate to add in list after 1-st, 3-rd, 7-th, 15-th
%  element a given value e.

% addElem(l1l2...ln, elem, pos) = 
% = [], if n = 0
% = {l1} U elem U addElem(l2...ln, elem, pos + 1), if pos = 1 or pos = 3 or pos = 7 or pos = 15
% = {l1} U addElem(l2...ln, elem, pos + 1), otherwise

% addElem(L:list, E:number, P:number, R:list)
% (i,i,i,o)

addElem([],_,_,[]).
addElem([H|T],E,P,[H,E|R]):-
    (P =:= 1 ; P =:= 3 ; P =:= 7 ; P =:= 15),
    !,
    P1 is P + 1,
    addElem(T,E,P1,R).
addElem([H|T],E,P,[H|R]):-
    P1 is P + 1,
    addElem(T,E,P1,R).



% b. For a heterogeneous list, formed from integer numbers and list of numbers; add in every
%   sublist after 1-st, 3-rd, 7-th, 15-th element the value found before
%   the sublist in the heterogenous list. The list has the particularity that
%   starts with a number and there arenâ€™t two consecutive elements lists.
% Eg.: [1, [2, 3], 7, [4, 1, 4], 3, 6, [7, 5, 1, 3, 9, 8, 2, 7], 5] =>
% [1, [2, 1, 3], 7, [4, 7, 1, 4, 7], 3, 6, [7, 6, 5, 1, 6, 3, 9, 8, 2, 6, 7], 5].


% heterList(l1l2...ln, elem) = 
% = [], if n = 0
% = addElem(l1, elem, 1) U heterList(l2...ln, elem), if l1 is a list
% = {l1} U heterList(l2...ln, l1), otherwise

% heterList(L:list, E:number, R:list)
% (i,i,o)

heterList([],_,[]).
heterList([H|T],E,[RA|R]):-
    is_list(H),
    !,
    addElem(H,E,1,RA),
    heterList(T,E,R).
heterList([H|T],_,[H|R]):-
    heterList(T,H,R).